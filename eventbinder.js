// eventBinder lib v0.1.0
// http://github.com/alchapone/eventBinder
// 
// Copyright 2012, Alex Chaplinsky
// Released under the MIT License
//
// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.EventBinder = (function() {
    var collectEventData,
      _this = this;

    EventBinder.prototype.events = {};

    function EventBinder(el) {
      if (el == null) {
        el = document;
      }
      this.publish = __bind(this.publish, this);

      this.subscribe = __bind(this.subscribe, this);

      this.attachEvent = __bind(this.attachEvent, this);

      this.bindEvents = __bind(this.bindEvents, this);

      this.el = el;
      this.bindEvents();
      if (this.initialize != null) {
        this.initialize;
      }
    }

    EventBinder.prototype.bindEvents = function() {
      var callback, event, _ref, _results;
      _ref = this.events;
      _results = [];
      for (event in _ref) {
        callback = _ref[event];
        _results.push(this.attachEvent(event, callback));
      }
      return _results;
    };

    EventBinder.prototype.attachEvent = function(event, callback) {
      var bind,
        _this = this;
      if (event.match(/:/)) {
        bind = event.split(':');
        return $(this.el).on(bind[0], bind[1], function(event) {
          return _this[callback](collectEventData(event));
        });
      } else {
        return this.subscribe(event, callback);
      }
    };

    collectEventData = function(event) {
      var data;
      event.preventDefault();
      data = $(event.target).data();
      data.target = event.target;
      return data;
    };

    EventBinder.prototype.subscribe = function(event, callback) {
      var _this = this;
      return $(document).on(event, function(event) {
        return _this[callback](collectEventData(event));
      });
    };

    EventBinder.prototype.publish = function(event, data) {
      if (data == null) {
        data = null;
      }
      return $(document).trigger(event, data);
    };

    return EventBinder;

  }).call(this);

}).call(this);
